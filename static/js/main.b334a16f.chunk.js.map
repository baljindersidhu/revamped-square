{"version":3,"sources":["components/sidenav/Sidenav.js","components/navbar/Navbar.js","components/homepage/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["Sidenav","actions","icons","map","icon","className","action","index","actionIcon","actionName","key","Navbar","type","placeholder","src","aria-label","alt","HomePage","tags","caption","heading","description","HomePageView","React","Component","PictureCard","this","props","tag","join","style","backgroundImage","NewsCard","UploadMediaCard","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b334a16f.chunk.js","sourcesContent":["import React from 'react';\nimport './Sidenav.css';\n\nexport default function Sidenav(){\n\n    const actions = [\"Home\", \"Dashboard\", \"Pages\", \"Plugins\", \"Post\", \"Support Center\", \"Media\", \"Appearance\", \"Ecommerce\"];\n    let icons = [\"home-smile-2\", \"sound-module\", \"pages\", \"plug-2\", \"discuss\", \"question-answer\", \"disc\", \"mouse\", \"shopping-basket-2\"];\n    icons = icons.map(icon => `ri-${icon}-line`);\n\n    function getActions(){\n        return actions.map((action, index) => getAction(icons[index], action, index));\n    }\n\n    function getAction(actionIcon, actionName, key){\n        return (\n            <div className=\"row centerV action\" key={key}>\n                <i className={actionIcon}></i>\n                <div className=\"actionName\">{actionName}</div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"positionAbsolute column Sidenav\">\n            {getActions()}\n            <div className=\"fillParent\"></div>\n            <div className=\"column centerV centerH customerCareBtn\"><i className=\"ri-customer-service-2-line\"></i></div>\n        </div>\n    );\n}","import React from 'react';\nimport './Navbar.css';\n\nexport default function Navbar(){\n    return (\n        <div className=\"positionAbsolute row centerV Navbar\">\n            <div className=\"brandName\">Square</div>\n            <div className=\"positionRelative brandIcon\"></div>\n\n            <div className=\"row centerV tabs\">\n                <div className=\"positionRelative tab\">Discuss</div>\n                <div className=\"positionRelative tab\">Browse</div>\n            </div>\n\n            <div className=\"fillParent\"></div>\n            <div className=\"row centerV globalSearch\">\n                <input type=\"text\" placeholder=\"Search Article, Media, Story\"></input>\n                <div className=\"icon\"><i className=\"ri-search-line\"></i></div>\n            </div>\n            <div className=\"fillParent\"></div>\n\n            <div className=\"userAvatar\">\n                <img src=\"images/user-avatar.png\" aria-label=\"user avatar image\" alt=\"user_avatar\"/>\n            </div>\n\n            <div className=\"notificationIcon positionRelative\"><i className=\"ri-notification-2-line\"></i></div>\n\n            <div className=\"row centerV btn\">\n                <div className=\"label\">New</div>\n                <div className=\"icon\"><i className=\"ri-add-line\"></i></div>\n            </div>\n\n        </div>\n    );\n}","import React from 'react';\nimport './HomePage.css';\n\nexport default function HomePage(){\n    const tags = [\"travel\", \"uidesign\"];\n    const newsCardHeading = \"WordPress Events & News\";\n    const newsCardDescription = \"All the rumours have finally died down and many skeptics have tightened their lips.\";\n    \n    return (\n        <div className=\"HomePage\">\n            <HomePageView />\n            <div className=\"content row centerV\">\n                <PictureCard tags={tags} caption=\"images/pattern4.jpg\" />\n                <NewsCard heading={newsCardHeading} description={newsCardDescription} caption=\"covers/cover-2.jpg\" />\n                <UploadMediaCard />\n            </div>\n        </div>\n    );\n}\n\nclass HomePageView extends React.Component{\n    render(){\n        return (\n            <div className=\"row centerV viewSelector\">\n                <div className=\"row centerV views\">\n                    <div className=\"view\">Overview</div>\n                    <div className=\"view\">Customization</div>\n                </div>\n                <div className=\"fillParent\"></div>\n                <i className=\"ri-menu-line\"></i>\n                <i className=\"ri-layout-grid-fill\"></i>\n            </div>\n        );\n    }\n}\n\nclass PictureCard extends React.Component{\n\n    render(){\n        let tags = this.props.tags.map(tag => '#'+tag).join(' ');\n        return (\n            <div className=\"Card PictureCard positionRelative\" style={{backgroundImage: `url(${this.props.caption})`}}>\n                <div className=\"content\">\n                    <div className=\"header row reverse\">\n                        <div className=\"iconBtn\"><i className=\"ri-arrow-right-line\"></i></div>\n                        <div className=\"iconBtn\"><i className=\"ri-arrow-left-line\"></i></div>\n                    </div>\n\n                    <div className=\"title\">Your Recent Drafts</div>\n                    <div className=\"tags\">{tags}</div>\n                    <div className=\"subtitle\">Edit now</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass NewsCard extends React.Component{\n\n    render(){\n        return (\n            <div className=\"Card NewsCard positionRelative\">\n                <div className=\"positionAbsolute bg\" style={{backgroundImage: `url(${this.props.caption})`}}></div>\n                <div className=\"positionRelative\">\n                    <div className=\"header row reverse\">\n                        <div className=\"iconBtn\"><i className=\"ri-share-line\"></i></div>\n                    </div>\n\n                    <div className=\"heading\">{this.props.heading}</div>\n                    <div className=\"description\">{this.props.description}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass UploadMediaCard extends React.Component{\n    render(){\n        return (\n            <div className=\"UploadMediaCard Card column\">\n                <div className=\"header row reverse centerV\">\n                    <div className=\"iconBtn\"><i className=\"ri-close-line\"></i></div>\n                    <div className=\"fillParent\"></div>\n                    <div className=\"heading\">Drag and drop images, paste embed, enter text and link</div>\n                    <div className=\"avatar\"><img src=\"images/user-avatar.png\" alt=\"user_avatar\" /></div>\n                </div>\n                <div className=\"fillParent\"></div>\n                <div className=\"row centerV\">\n                    <div className=\"cancelBtn\">Cancel</div>\n                    <div className=\"fillParent\"></div>\n                    <div className=\"row centerV btn dark\">\n                        <div className=\"label\">Upload</div>\n                        <div className=\"icon\"><i className=\"ri-gallery-upload-line\"></i></div>\n                    </div>\n                    <div className=\"row centerV btn\">\n                        <div className=\"label\">Quick Darg</div>\n                        <div className=\"icon\"><i className=\"ri-arrow-right-line\"></i></div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './App.css';\nimport 'remixicon/fonts/remixicon.css';\n\nimport Sidenav from './components/sidenav/Sidenav';\nimport Navbar from './components/navbar/Navbar';\nimport HomePage from './components/homepage/HomePage';\n\nexport default class App extends React.Component {\n  \n  render(){\n    return (\n      <div className=\"App\">\n        <Sidenav />\n        <Navbar />\n        <HomePage />\n      </div>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}